[gvv-mod]
title=全局变量查看器
tab-filtered-view=变量跟踪
help-tab=帮手
xresize=调整窗口宽度
yresize=调整窗口高度
track-interval-control=跟踪刷新间隔（滴答）
track-interval-control-off=[color=orange](on_tick event disabled in mod-setting)[/color] 跟踪刷新间隔（tick）
track-refresh=立即刷新跟踪 (__CONTROL__refresh_gvv-mod__)\n（建议在使用 game.tick_paused 或 on_tick 事件时禁用）
tree-refresh=刷新树 (__CONTROL__refresh_gvv-mod__)
remove-checked-button=删除选中的跟踪条目
move-up-checked=- 左键单击：上移选中的跟踪条目\n- 右键单击：将选中的跟踪条目上移到最顶部
move-down-checked=- 左键单击：将选中的跟踪条目下移\n- 右键单击：将选中的跟踪条目下移到最底部
check-process-btn=- 左键单击：反转选择\n- 右键单击：取消选中所有/选中所有
export-import-btn=- 左键单击：导出列表\n- 右键单击：导入列表
check-for-remove=- 选中此项并单击顶部的 __1__ 按钮以删除\n- 选中此项并单击顶部的 __2__ 按钮以调整顺序\n- 您也可以滚轮单击条目的主体以选中/取消选中。
show_na=显示不适用
show_nil=显示无
show_func=显示方法
obj-list-tooltip=右键删除
right-to-select-all=右键全选
input-code=输入代码以在变量跟踪中运行
confirm-input-code=输入
right-to-copy-code=右键复制
right-to-copy-edit-code=右键单击以复制或编辑
copy-code=跟踪条目的复制代码
close-main-tooltip=关闭 (__CONTROL__toggle-main-frame_gvv-mod__)
edit-code-title=编辑跟踪条目的代码
edit-code-btn=编辑
confirm-edit-code=确认编辑
export-code-title=导出变量跟踪列表
import-code-title=导入变量跟踪列表
import-code-comment=用 [color=yellow] 分隔<newline_char>[/color]（可选）.. [color=yellow]--[[]]--[/color] .. [color=yellow]<newline_char> [/color]（可选），8~10个字符。
import-code-btn=进口
search-btn=树条目字符串搜索
search-key=搜索键
search-value=搜索值
search-regexp=使用 Lua 模式表达式
search-case=区分大小写
load_cont=继续加载。 __1__ 仍然存在。

[gvv-mod-command-help]
only-admin=只有管理员或单人游戏中的玩家可以使用此命令。
need-graphic=使用此命令需要游戏内图形用户界面。
no-level-support=此地图不支持 gvv 的远程接口。尝试 /gmods 以查看可访问的 mod 列表。您需要在此保存文件或此场景中的“control.lua”末尾插入一些代码。
no-mod-support=Mod &quot;__1__&quot; 不支持 gvv 的远程接口。尝试 /gmods 以查看可访问的 mod 列表。您需要在需求模块中的“control.lua”末尾插入一些代码。
no-mod-found=在加载的模组列表中找不到模组“__1__”。尝试 /gmods 查看加载的 mod 列表。
gvv=：打开/关闭 gvv 主 GUI 窗口。只有管理员或单人游戏中的玩家可以使用此命令。
gmods=: (gvv) 打印加载的 mod 列表和全局可访问的 mod 列表。
gdump=<mod_name>(可选) : (gvv) 以 lua 对象符号格式打印可访问模块的全局数据。\n如果没有<mod_name>给定，将使用级别（当前地图）。
gdump-luaon=<mod_name>(可选) : (gvv) 以 lua 对象符号格式打印可访问模块的全局数据。\n如果没有<mod_name>给定，将使用级别（当前地图）。
gdump-json=<mod_name>(可选) : (gvv) 以 js 对象符号格式打印可访问模块的全局数据。\n 如果没有<mod_name>给定，将使用级别（当前地图）。

[gvv-mod-help]
control_lua=控制.lua
console1=控制台命令
console2=复制<mod_name>
how_to_use_gui=如何使用图形用户界面
troubleshoot=故障排除
tips=使用技巧

[gvv-mod-helpui]
diagnose=诊断
fix=清理
clear-report=清除

[gvv-mod-help-control_lua]
1=编辑control.lua
2=要让[color=yellow]gvv[/color]访问[color=yellow]global[/color]表的mod、savefile或scenario（从头开始），需要修改需求mod的“control.lua”文件或地图。
3=在 mod 或 map 的“control.lua”文件的第一行或最后一行输入以下代码。或者您可以通过将其分配给没有“()”括号的“本地”值来修改它以放置在任何地方，这意味着“立即执行此功能”，然后它将被存储功能，您可以在以后随时运行它。
4=如果是保存文件，请先从中提取“control.lua”。然后，编辑代码并将其覆盖在压缩文件内“control.lua”的相同位置。
5=参考 __1__ 使 [color=yellow]gvv[/color] 暂时访问当前会话的地图或模组，无需编辑“control.lua”。
6=暂时可用状态无法保存。在多人游戏的情况下，在这种状态下加入多人游戏的额外玩家可以通过不同步踢出。

[gvv-mod-help-console1]
1=控制台命令
2=[color=yellow]gvv[/color] mod 提供以下命令。
3=__1__ ：打开/关闭此窗口。玩家不是管理员或服务器控制台不能使用它。
4=__1__ ：打印活动模组列表和 [color=yellow]gvv[/color] 可访问的模组列表。
5=__1__<mod_name> （[color=yellow]level[/color] if not given）：将 [color=yellow]global[/color] 需求表打印为可复制文本。您可以使用 __2__ 选择格式。默认为 __3__。
5-0=以下是 Factorio 的默认内置命令。
5-1=__1__ __<mod_name> __<lua_code> : 在 mod 的沙箱范围内执行 Lua 代码。如果 [color=yellow]__<mod_name> __[/color] 没有给出，它在 [color=yellow]level[/color] 范围内执行。还有 __2__ 没有显示输入重复。
6-0=暂时允许访问特定模组或地图（[color=yellow]level[/color]）
6=要使[color=yellow]gvv[/color]暂时访问当前会话的地图或特定mod而不编辑“control.lua”，请选择mod并在聊天控制台输入以下命令。
7=暂时可用状态无法保存。在多人游戏的情况下，在这种状态下加入多人游戏的额外玩家可以通过不同步踢出。
8=输入以下命令会导致 [color=yellow]gvv[/color] 无法访问 mod 或地图的 [color=yellow]global[/color] 表。
9=如果通过编辑“control.lua”已经可以访问默认状态，使用上述命令将导致稍后加入多人游戏的额外玩家可以被异步踢出。
10=如果由于没有编辑“control.lua”而无法访问默认状态，并且如果使用启用命令暂时可以访问地图，则使用禁用命令将允许玩家再次自由加入多人游戏。

[gvv-mod-help-console2]
1=复制<mod_name>
2=在这里您可以复制一个启动代码调用mod以便于使用。


[gvv-mod-help-how_to_use_gui]
1=如何使用图形用户界面
2=在 [color=yellow]gvv[/color] 的主 GUI 中，有 5 个选项卡。
3=__1__ ：持续监控标记为感兴趣的 [color=yellow]global[/color] 变量的值。
4=__1__ ：将 [color=yellow]gvv[/color] 可访问的 [color=yellow]global[/color] 模组表显示为目录树结构。
5=__1__ : 用于在[color=yellow]global[/color]表中找到以“[color=blue]Lua...[/color]”开头的[color=blue]LuaObject[/color]，首先在此处注册并且可以访问其内容。
6=__1__ : 访问异星工厂的全局 [color=blue]LuaObject[/color]。
7=__1__ ：此选项卡。
8=您可以在目录树结构中找到以下条目。
9=： 一个文件夹。左键打开，右键在__1__注册。
10=: 可变键。右键单击以在 __1__ 处注册。
11=：一个 [color=blue]LuaObject[/color] 对象。右键单击以在 __1__ 处注册。
12=：此 [color=blue]LuaObject[/color] 中的不可用（n/a）属性。
13=: 这个[color=blue]LuaObject[/color]中的一个方法函数。 [color=yellow]gvv[/color] 不支持从树视图运行方法。
14=但是您可以通过单击__1__的空白区域直接通过注册代码来运行方法。如果有code的返回值，就会显示出来。请注意，执行结果已应用。
15=右键单击 __1__ 中条目的路径将显示一个窗口，允许您复制路径或代码。


[gvv-mod-help-troubleshoot]
1=故障排除
2=错误信息是否暴露？大多数错误发生在被跟踪对象实际消失或跟踪路径中的表被删除时。
3=这是很常见的事情吗？在大多数情况下，它可以通过尝试再次刷新或查看和处理已更改的内容来解决。
4=但是您不能访问整个 [color=yellow]global[/color] 表吗？这是非常特殊的情况。如果您收到类似于以下的错误消息，请尝试以下方式。
5=输入有问题的模组名称，点击__1__或__2__会将结果存储在[color=yellow]gvv[/color]的[color=yellow]__3__[/color]路径下。
6=按 __1__ 实际上会删除 [color=yellow]global[/color] 中引起问题的条目。
7=__1__ 不会删除可能有问题但现在不会引起问题的条目。只有 [color=yellow]__2__[/color] 中的条目表示为已删除。
8=清除 [color=yellow]__1__[/color] ：

[gvv-mod-help-tips]
1=使用技巧
2=使用 [color=yellow]global[/color] 表的部分作为备忘录空间
3=当使用 [font=default-bold]/c[/font] 或 [font=default-bold]/silent-command[/font] 运行代码时，你知道谁的 [color=yellow]global[/color] 是[color=yellow]global[/color] 你在打字吗？这就是地图的 [color=yellow]global[/color]（[color=yellow]level[/color]）。相反，要在其他 mod 的沙箱中运行代码，您必须输入 [font=default-bold]/c __<mod_name> __<lua_code> [/font]。您可以在 [color=yellow]global[/color] 中放置任何内容（不会导致不同步）并对其进行跟踪。
3-0=因为 __1__ 在 [color=yellow]gvv[/color] 的 [color=yellow]global[/color] 范围内工作，所以每次 [color=yellow]remote[/color] 调用 [color=yellow] 时都会执行全表复制其他模组的全局[/color]。如果您想非常频繁地跟踪某个对象的 [font=default-bold]property[/font]，请先将其放入 [color=yellow]gvv[/color] 的 [color=yellow]global[/color] 表中跟踪对性能更好。
3-1=- 初始化代码
3-2=- 备忘录示例 - game.player.selected
3-3=- 备忘录示例 - 还没有写，你可以自己写。
3-4=- 要删除特定备忘录，粘贴后，键入数字并按__1__。
3-4-tooltip=我以这种方式编写代码来绕过括号必须在参数后关闭的函数符号规则。
3-5=以这种方式使用 [color=yellow]global[/color] 表是一种技巧，并且上面介绍的聊天命令不是 [color=yellow]gvv[/color] mod 的标准行为。我只是介绍了另一种适用的方式作为例子。
4=可以右键单击的东西很少。
5=- 在 __1__ 选项卡中右键单击 __2__ 或 [font=var]return[/font] 值会生成一个允许复制内容的窗口。
5-word1=格雷码
6=- __1__ 选项卡左侧的列表条目可以通过右键单击来删除。
7=- 用于复制内容的文本字段中的所有文本都可以通过右键单击来选择。您可以使用 __1__ 复制它们。
8=监控任意返回值
9=- 您是否尝试过右键单击 __1__ 选项卡下的空白区域？您可以输入任何有返回值的代码。但如果工作函数在代码内部，可能会影响游戏进度。
10=模组设置可用
11=- 您可以在 __1__ 找到选项，允许更改 __2__ 的默认列表而不是示例。
11-1=- 有一个选项可以完全打开/关闭 [color=yellow]gvv[/color] 的 [font=default-bold]on_tick[/font] 事件。
11-2=- 从服务器控制台，使用以下命令关闭 [font=default-bold]on_tick[/font]。 （[font=default-bold]true[/font] for on）
12=更长的跟踪刷新间隔
13=您可以通过单击跟踪刷新间隔的数量来输入大于 180 的值。
14=使用 /c __ 的示例<mod_name>__
15=[font=default-bold]/c 调用的每个对象，包括 [color=yellow]global[/color] __<mod_name> __[/font] 命令属于指定模组的沙箱。
16=__1__ 或错误，如果有问题。
17=[color=yellow]gvv[/color] 提供相当于 [font=default-bold]/c __ 的远程功能<mod_name>__[/font] 在脚本中可用。在 [font=default-bold]/editor[/font] 的 Lua 片段中使用它的示例。让我们在此处输入并拖动以运行。
18=如何在 __1__ 中放置任意函数或 if、for 等语句
19=因为它使用了 loadstring() 函数并且它在代码前面添加了“return”前缀字符串，所以你需要用一个函数来包装你的函数来执行它。



[controls]
toggle-main-frame_gvv-mod=打开/关闭 gvv 窗口
refresh_gvv-mod=刷新当前选项卡的内容

[mod-setting-name]
gvv-mod_preinput_code=预先输入默认跟踪代码（不影响游戏时间）
gvv-mod_on_start=应用默认跟踪代码（对游戏时间没有影响）
gvv-mod_enable-on-tick=启用跟踪刷新（[font=default-bold]on_tick[/font] 事件）

[mod-setting-description]
gvv-mod_preinput_code=（不影响播放时间）\n应用这些代码而不是示例代码。\n用 [color=yellow]--[[]]--[/color] 分隔，8 个字符。\n请注意应用的是执行结果如果使用函数。
gvv-mod_on_start=（对游戏时间没有影响）\n从头开始地图时应用默认跟踪代码。\n如果未选中，则会显示示例代码。
gvv-mod_enable-on-tick=（在播放期间可更改）\n在 [font=default-bold]on_tick[/font] 事件中附加刷新功能（跟踪等）。\n如果您遇到性能下降或从未使用 gvv GUI，请尝试关闭此功能。\n （如果您将其关闭，则只能手动刷新跟踪变量。）


_=～
