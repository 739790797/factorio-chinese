[vehicle-wagon2]
data-error=错误：找不到货车 #__1__ 的数据。换成空车。
empty-wagon-busy-error=这辆马车已经被装载了！
empty-wagon-error=错误：没有空间来创建空货车。 __ENTITY__vehicle-wagon__ 物品洒在地上。
item-inserted=+__1__ __2__
load-locked-vehicle-error=错误：无法加载 __1__，因为 __2__ 已将其锁定。
load-owned-vehicle-error=错误：无法加载 __1__，它属于 __2__。
loaded-wagon-busy-error=这辆马车已经卸货了！
loaded-wagon-error=错误：没有空间来创建装载的货车。 __ENTITY__vehicle-wagon__ 物品洒在地上。
location-too-close-error=错误：所选位置太靠近 __1__。
location-too-far-away-error=错误：所选位置距离 __1__ 太远。
migrate-12x-success=Vehicle Wagon 2 从 1.2.x 版本成功迁移数据。
migrate-prototype-error=迁移错误：删除货车#__1__ 的内容，因为车辆原型“__2__”不存在。
migrate-prototype-warning=警告：如果任何已删除的车辆被其他模组重命名，请联系 Vehicle Wagon 2 模组作者。
migrate-vehicle-success=载有 __2__ 的货车 #__1__ 的迁移数据。
migrate-wagon-error=迁移错误：删除“__2__”上的数据，因为找不到货车 #__1__。
no-vehicle-selected=未选择车辆。
select-unload-vehicle-location=已选择装载的货车！现在单击您要卸载 __1__ 的位置。
train-in-motion-error=错误：火车在行驶时无法装卸。
train-in-space-error=错误：__1__ 在太空中时无法卸载。
unknown-vehicle-error=错误：不支持加载 __1__。
unload-locked-vehicle-error=错误：无法卸载 __1__，因为 __2__ 已将其锁定。
unload-owned-vehicle-error=错误：无法卸载 __1__，它属于 __2__。
vehicle-in-motion-error=错误：移动时无法装载车辆。
vehicle-in-space-error=错误：在太空中无法加载 __1__。
vehicle-invalid-error=错误：所选车辆不再有效。请再试一次。
vehicle-not-created-error=错误：没有空间可以卸载 __1__。
vehicle-passenger-error=错误：无法装载内部有玩家的车辆。
vehicle-prototype-error=错误：无法卸载货车 #__1__，因为车辆原型“__2__”不存在。
vehicle-selected=__1__ 已选中！现在单击附近的 __ENTITY__vehicle-wagon__。
wagon-destroyed=__ENTITY__vehicle-wagon__ __1__被毁！你失去了你的__2__。
wagon-invalid-error=错误：所选货车不再有效。请再试一次。
wagon-passenger-error=错误：无法卸载里面有玩家的货车。
wagon-too-far-away-error=错误：选择的 __ENTITY__vehicle-wagon__ 离 __1__ 太远。
too-many-selected-error=错误：使用 __ITEM__winch__ 选择的车辆或货车太多。

[item-name]
winch=绞盘

[item-description]
winch=按住 __ITEM__winch__ 的同时，单击车辆，然后单击附近的 __ENTITY__vehicle-wagon__ 将车辆装载到货车上。

[entity-name]
vehicle-wagon=车厢
loaded-vehicle-wagon-car=__ENTITY__vehicle-wagon__ (__ENTITY__car__)
loaded-vehicle-wagon-cargoplane=__ENTITY__vehicle-wagon__ (__ENTITY__cargo-plane__)
loaded-vehicle-wagon-gunship=__ENTITY__vehicle-wagon__ (__ENTITY__gunship__)
loaded-vehicle-wagon-jet=__ENTITY__vehicle-wagon__ (__ENTITY__jet__)
loaded-vehicle-wagon-tank=__ENTITY__vehicle-wagon__ (__ENTITY__tank__)
loaded-vehicle-wagon-tarp=__ENTITY__vehicle-wagon__（其他）
loaded-vehicle-wagon-truck=__ENTITY__vehicle-wagon__ (__ENTITY__dumper-truck__)
loaded-vehicle-wagon-tank-L=__ENTITY__vehicle-wagon__ (__ENTITY__Schall-tank-L__)
loaded-vehicle-wagon-tank-H=__ENTITY__vehicle-wagon__ (__ENTITY__Schall-tank-H__)
loaded-vehicle-wagon-tank-SH=__ENTITY__vehicle-wagon__ (__ENTITY__Schall-tank-SH__)
loaded-vehicle-wagon-kr-advanced-tank=__ENTITY__vehicle-wagon__ (__ENTITY__kr-advanced-tank__)

[entity-description]
loaded-vehicle-wagon-car=使用 __ITEM__winch__ 从这辆货车上卸下 __ENTITY__car__。
loaded-vehicle-wagon-cargoplane=使用 __ITEM__winch__ 从这辆货车上卸下 __ENTITY__cargo-plane__。
loaded-vehicle-wagon-gunship=使用 __ITEM__winch__ 从这辆货车上卸下 __ENTITY__gunship__。
loaded-vehicle-wagon-jet=使用 __ITEM__winch__ 从这辆货车上卸下 __ENTITY__jet__。
loaded-vehicle-wagon-tank=使用 __ITEM__winch__ 从这辆货车上卸下 __ENTITY__tank__。
loaded-vehicle-wagon-tarp=使用 __ITEM__winch__ 从这辆货车上卸下车辆。
loaded-vehicle-wagon-truck=使用 __ITEM__winch__ 从这辆货车上卸下 __ENTITY__dumper-truck__。
loaded-vehicle-wagon-tank-L=使用 __ITEM__winch__ 从这辆货车上卸下 __ENTITY__Schall-tank-L__。
loaded-vehicle-wagon-tank-H=使用 __ITEM__winch__ 从这辆货车上卸下 __ENTITY__Schall-tank-H__。
loaded-vehicle-wagon-tank-SH=使用 __ITEM__winch__ 从这辆货车上卸下 __ENTITY__Schall-tank-SH__。
loaded-vehicle-wagon-kr-advanced-tank=使用 __ITEM__winch__ 从这辆货车上卸下 __ENTITY__kr-advanced-tank__。
vehicle-wagon=使用 __ITEM__winch__ 将车辆装载到这辆平板货车上，并在您的铁路旅行中随身携带。

[technology-name]
vehicle-wagons=车辆货车

[technology-description]
vehicle-wagons=__ENTITY__vehicle-wagon__ 允许您在火车上携带装备和装载的车辆，因此它们可以在抵达后立即部署。

[mod-description]
##VehicleWagon2=使用 __ITEM__winch__ 将您装备齐全且满载的战斗或运输车辆拖到平板火车车厢上，并在您的铁路之旅中随身携带！

[mod-setting-name]
vehicle-wagon-allow-robot-unloading=允许机器人卸载 __ENTITY__vehicle-wagon__s
vehicle-wagon-use-custom-weights=使用自定义货车重量和力量
vehicle-wagon-maximum-weight=最大 __ENTITY__vehicle-wagon__ 负载能力
vehicle-wagon-empty-weight-factor=空车重量系数
vehicle-wagon-vehicle-weight-factor=装载车辆重量系数
vehicle-wagon-braking-factor=__ENTITY__vehicle-wagon__ 制动力系数
vehicle-wagon-empty-friction-factor=空车摩擦系数
vehicle-wagon-loaded-friction-factor=载货货车摩擦系数
vehicle-wagon-use-GCKI-permissions=尊重 Gizmo 的车钥匙（如果已安装）的车辆权限
vehicle-wagon-compatibility-entities=包括所有装载的货车实体

[mod-setting-description]
vehicle-wagon-allow-robot-unloading=选中时，拆解装载货车的机器人将首先尝试卸载车辆。\n未选中时，机器人将始终将车辆及其内容物带到物流网络。
vehicle-wagon-use-custom-weights=选中后，__ENTITY__vehicle-wagon__ 的重量、制动力和摩擦力是根据 __ENTITY__cargo-wagon__ 及其携带的车辆使用以下乘数计算得出的。
vehicle-wagon-maximum-weight=__ENTITY__vehicle-wagon__ 上可装载的最重车辆的重量。
vehicle-wagon-empty-weight-factor=相对于 __ENTITY__cargo-wagon__ 的空车重量。
vehicle-wagon-vehicle-weight-factor=车辆重量的一部分添加到装载的货车上。
vehicle-wagon-braking-factor=__ENTITY__vehicle-wagon__ 相对于 __ENTITY__cargo-wagon__ 的制动力。
vehicle-wagon-empty-friction-factor=空车相对于 __ENTITY__cargo-wagon__ 的摩擦力。
vehicle-wagon-loaded-friction-factor=装载货车相对于 __ENTITY__cargo-wagon__ 的摩擦力。
vehicle-wagon-use-GCKI-permissions=选中后，如果其他人已使用 __ITEM__car-key__ 锁定或认领车辆，您将无法装载或卸载车辆。
vehicle-wagon-compatibility-entities=选中后，所有装载的货车类型都包含在游戏中，即使它们对应的模组不存在。如果您将车辆装载到旅行车上，则使用它来迁移保存文件，然后删除添加该车辆的 mod。

[command-help]
vehicle-wagon-debug=用法：/vehicle-wagon-debug [dump|dumplog]\ndump：将全局数据表写入控制台。\ndumplog：将全局数据表写入factorio_current.log。
